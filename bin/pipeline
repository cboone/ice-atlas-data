#!/usr/bin/env bash

# shellcheck disable=SC2155
declare -r command_name=$(basename "$0")

set -e

function main {
  local bounds_arg="--no-bounds"

  local bucket
  local deploy
  local download_region
  local generate_isobaths
  local generate_scrim="generate scrim"
  local update_regions="update regions"

  while (($# > 0)); do
    case "$1" in
    --deploy)
      deploy="deploy"
      bucket="$2"
      shift 2
      ;;
    --download)
      download_region="download regions"
      update_regions=
      shift
      ;;
    --generate-isobaths)
      generate_isobaths="generate isobaths"
      shift
      ;;
    --skip-update)
      update_regions=
      shift
      ;;
    --use-existing-bounds)
      bounds_arg="--use-existing-bounds"
      shift
      ;;
    --use-existing-scrim)
      generate_scrim=""
      shift
      ;;
    --use-local-image)
      export PLANETILER_IMAGE="openmaptiles/planetiler-openmaptiles:ice-atlas"
      shift
      ;;
    *)
      echo "[$command_name] Unexpected option \"$1\" ignored"
      shift
      ;;
    esac
  done

  echo
  if [[ "$download_region" ]]; then
    echo "[$command_name] Downloading foreground regions"
    bin/download-region \
      --force \
      "$bounds_arg" \
      new_hampshire vermont

    echo "[$command_name] Downloading secondary regions"
    bin/download-region \
      --force \
      "$bounds_arg" \
      maine new_york
  else
    echo "[$command_name] Skipping downloads of foreground and secondary regions"
  fi

  echo
  if [[ "$update_regions" ]]; then
    echo "[$command_name] Updating foreground regions"
    bin/update-region new_hampshire vermont

    echo "[$command_name] Updating secondary regions"
    bin/update-region maine new_york
  else
    echo "[$command_name] Skipping updates of foreground and secondary regions"
  fi

  echo
  echo "[$command_name] Extracting borders from foreground and secondary regions"
  bin/extract-border \
    maine Maine \
    new_hampshire "New Hampshire" \
    new_york "New York" \
    vermont Vermont

  echo
  echo "[$command_name] Calculating bounding boxes of foreground and secondary region"
  bin/extract-bounds maine new_hampshire new_york vermont
  bin/calculate-bounds maine new_hampshire new_york vermont

  echo
  echo "[$command_name] Merging borders of foreground regions (New Hampshire, Vermont)"
  bin/merge-borders \
    nh new_hampshire \
    vt vermont

  echo
  echo "[$command_name] Merging borders of secondary regions"
  bin/calculate-buffered-border --buffer -0.75 new_york
  bin/merge-borders \
    me maine \
    nh new_hampshire \
    nybuffered new_york-buffered \
    vt vermont

  echo
  echo "[$command_name] Extracting bounding boxes of foreground and secondary regions"
  bin/extract-bounds nh-vt me-nh-nybuffered-vt
  bin/calculate-bounds nh-vt me-nh-nybuffered-vt

  echo
  if [[ "$download_region" ]]; then
    echo "[$command_name] Downloading background regions"
    bin/download-region \
      --force \
      --bounds "$(cat bounding-boxes/me-nh-nybuffered-vt.csv)" \
      connecticut massachusetts new_brunswick ontario quebec rhode_island
  else
    echo "[$command_name] Skipping downloads of background regions"
  fi

  echo
  if [[ "$update_regions" ]]; then
    echo "[$command_name] Updating background regions"
    bin/update-region connecticut massachusetts new_brunswick ontario quebec rhode_island
  else
    echo "[$command_name] Skipping updates of background regions"
  fi

  echo
  echo "[$command_name] Merging foreground regions"
  bin/merge-regions nh-vt new_hampshire vermont

  echo
  echo "[$command_name] Merging background regions"
  bin/merge-regions \
    ct-ma-me-nb-ny-on-qc-ri \
    connecticut massachusetts maine new_brunswick new_york ontario quebec rhode_island

  echo
  echo "[$command_name] Extracting borders from non-secondary background regions"
  bin/extract-border \
    connecticut Connecticut \
    massachusetts Massachusetts \
    new_brunswick "New Brunswick  Nouveau-Brunswick" \
    ontario Ontario \
    quebec Qu√©bec \
    rhode_island "Rhode Island"

  echo
  echo "[$command_name] Merging borders of background regions"
  bin/merge-borders \
    ct connecticut \
    ma massachusetts \
    me maine \
    nb new_brunswick \
    ny new_york \
    on ontario \
    qc quebec \
    ri rhode_island

  echo
  echo "[$command_name] Calculating bounding box of background region"
  bin/extract-bounds ct-ma-me-nb-ny-on-qc-ri
  bin/calculate-bounds ct-ma-me-nb-ny-on-qc-ri

  echo
  echo "[$command_name] Converting foreground region into tileset"
  bin/convert-region-to-pmtiles nh-vt

  echo
  echo "[$command_name] Converting background region into tileset"
  bin/convert-region-to-pmtiles \
    --bounds me-nh-nybuffered-vt \
    ct-ma-me-nb-ny-on-qc-ri

  echo
  if [[ "$generate_scrim" ]]; then
    echo "[$command_name] Generating scrim tileset"
    bin/generate-scrim
  else
    echo "[$command_name] Skipping scrim tileset generation, using existing scrim"
  fi

  echo
  if [[ "$generate_isobaths" ]]; then
    echo "[$command_name] Generating isobaths"
    bin/generate-isobaths
  else
    echo "[$command_name] Skipping isobath generation, using existing isobaths"
  fi

  echo
  echo "[$command_name] Merging tilesets"
  bin/merge-layers ct-ma-me-nb-ny-on-qc-ri nh-vt

  echo
  echo "[$command_name] Copying tileset to development repo"
  bin/copy-to-development ice-atlas ice-atlas

  if [[ "$deploy" ]]; then
    echo
    echo "[$command_name] Deploying tileset to $bucket repo"
    bin/deploy "$bucket" ice-atlas ice-atlas
  fi
}

echo "[$command_name] Started at $(date -u '+%Y-%m-%d %H:%M:%S')"
main "$@"
echo
echo "[$command_name] Finished at $(date -u '+%Y-%m-%d %H:%M:%S')"
