#!/usr/bin/env bash

# shellcheck disable=SC2155
declare -r command_name=$(basename "$0")

set -e

function main {
  local -a regions=()

  local bounds
  local bounds_args
  local remove_first
  local use_existing_bounds

  while (($# > 0)); do
    case "$1" in
    --force)
      remove_first=true
      shift
      ;;
    --bounds)
      bounds="$2"
      echo "[$command_name] Using bounds: [$bounds]"
      shift 2
      ;;
    --no-bounds)
      shift
      ;;
    --use-existing-bounds)
      use_existing_bounds="use existing bounds"
      shift
      ;;
    *)
      regions+=("$1")
      shift
      ;;
    esac
  done

  for region in "${regions[@]}"; do
    local destination="pbf/sources/$region.osm.pbf"

    echo "[$command_name] Downloading $region from geofabrik to $destination"

    if [[ $remove_first && -f "$destination" ]]; then
      echo "[$command_name] Removing old $destination first"
      rm -rf "$destination"
    fi

    if [[ ! $bounds && $use_existing_bounds ]]; then
      local bounds_file="bounding-boxes/$region.csv"
      if [[ -f "$bounds_file" ]]; then
        bounds=$(cat "$bounds_file")
        echo "[$command_name] Using existing bounds from $bounds_file: [$bounds]"
      else
        echo "[$command_name] Could not find existing bounds at $bounds_file"
      fi
    fi

    if [[ $bounds ]]; then
      bounds_args="--bounds=$bounds"
    fi

    docker run \
      --rm \
      -e JAVA_TOOL_OPTIONS="-Xmx32g -XX:MaxHeapFreeRatio=40" \
      -v "./pbf":/data \
      ghcr.io/onthegomap/planetiler:latest \
      --download \
      --only-download \
      --area="$region" \
      "$bounds_args" \
      --building_merge_z13=false \
      --download-threads=10 \
      --download-chunk-size-mb=1000 \
      --exclude-layers=housenumber \
      --fetch-wikidata=true \
      --languages=en \
      --max-point-buffer=4 \
      --minzoom=6 \
      --maxzoom=15 \
      --nodemap-type=sparsearray \
      --render_maxzoom=15 \
      --storage=ram \
      --transportation_name_limit_merge \
      --use-wikidata=true
  done
}

echo "[$command_name] Started at $(date -u '+%Y-%m-%d %H:%M:%S')"
main "$@"
echo "[$command_name] Finished at $(date -u '+%Y-%m-%d %H:%M:%S')"
